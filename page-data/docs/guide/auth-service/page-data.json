{"componentChunkName":"component---src-templates-post-template-js","path":"/docs/guide/auth-service","result":{"data":{"markdownRemark":{"fields":{"slug":"/docs/guide/auth-service"},"id":"360140c3-7af4-51c7-9ea3-b8d33bcba4dc","html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"post-toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>The auth service provides a form for keep the different users of ecosystem,\nthe general idea is <strong>share users through of all apps</strong>.</p>\n<h3 id=\"requirements\" style=\"position:relative;\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"post-toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements:</h3>\n<ol>\n<li>We need to add a <strong>Initial client</strong> with a command like (Infrastructure Task):</li>\n</ol>\n<p>Maybe is required for Auth admin Web/App</p>\n<pre><code class=\"language-sh\">aqueduct auth add-client --id com.local.test \\\n    --secret mysecret \\\n    --connect postgres://postgres:postgres@localhost:5432/on_watch_auth\n</code></pre>\n<h3 id=\"hierarchy\" style=\"position:relative;\"><a href=\"#hierarchy\" aria-label=\"hierarchy permalink\" class=\"post-toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hierarchy</h3>\n<ol>\n<li><strong>Initial client</strong> for Register new Clients</li>\n<li>\n<p><strong>New Users</strong>:</p>\n<ul>\n<li><strong>General users</strong>: Ex: Agents, Dispatchers, etc</li>\n<li><strong>Users representing external applications</strong>: A user who creates apis</li>\n</ul>\n</li>\n<li><strong>Roles</strong>: Roles created for manage information</li>\n<li><strong>APIs:</strong>: Each application that can authenticate</li>\n<li><strong>Permissions for api</strong>: A list of permissions for an specific API</li>\n<li><strong>Role with permission</strong>: Association between Roles and API Permissions</li>\n</ol>\n<h3 id=\"flow\" style=\"position:relative;\"><a href=\"#flow\" aria-label=\"flow permalink\" class=\"post-toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow</h3>\n<ol>\n<li>Create and API</li>\n<li>Add Roles</li>\n<li>Add a Client for the API (credentials used on external APP): Getting a <code>client ID</code> and <code>secret</code></li>\n<li>Add Permission for API</li>\n<li>Add Permission/API to Role</li>\n<li>Add Roles to Users</li>\n</ol>\n<h3 id=\"flow-users\" style=\"position:relative;\"><a href=\"#flow-users\" aria-label=\"flow users permalink\" class=\"post-toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow users</h3>\n<ol>\n<li>Register a user using Basic authentication credentials (Flow step 3) <code>POST /v1/register</code>\nand getting a new User.</li>\n<li>Login with your new credentials <code>POST /v1/login</code> and getting a Bearer token. In the process of login, the system detects your user, the basic credentials of your client/app (secret values), and show your roles bases on this params.</li>\n</ol>\n<pre><code class=\"language-json\"> {\n    \"id\": 1,\n    \"company\": null,\n    \"username\": \"pepito@company.com\",\n    \"authorization\": {\n    \"access_token\": \"asdsdasds\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 89999,\n    \"refresh_token\": \"sdasdasdasd\"\n    },\n    \"roles\": [\n        {\n            \"role\": {\"id\": 1, \"name\": \"Admin sales\"},\n            \"api\": {\"id\": 2, \"name\": \"Marketing module\"}\n        }\n    ]\n }\n</code></pre>","frontmatter":{"date":null,"title":"Auth service","sidebar":"Docs","showTitle":true,"hideAnchor":null}}},"pageContext":{}},"staticQueryHashes":["1006376404","1936182646","3649515864"]}